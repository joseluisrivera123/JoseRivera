Base de datos Oracle Cloud
bd
-- Crear la tabla
CREATE TABLE recuperacion.teen (
    id_adolescente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    surnamefather VARCHAR2(80) NOT NULL,
    surnamemother VARCHAR2(80) NOT NULL,
    dni VARCHAR2(8),
    estado VARCHAR2(1) DEFAULT 'A' NOT NULL,
    CONSTRAINT chk_dni CHECK (REGEXP_LIKE(dni, '^9[0-9]{7}$')),
    CONSTRAINT chk_name CHECK (REGEXP_LIKE(name, '^[A-Za-záéíóúÁÉÍÓÚñÑ ]+$'))
);

-- Insertar datos de ejemplo
-- Insertar datos corregidos
INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Robert', 'Sanchez', 'Rodriguez', '91234567', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Juan', 'Sanchez', 'Rodriguez', '91234568', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Pedroi', 'Sanchez', 'Rodriguez', '91234569', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Alberto', 'Quispe', 'Rodriguez', '91234570', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Piero', 'Rojas', 'Quispe', '91234571', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Jhonathan', 'Sanchez', 'Napan', '91234572', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Victor', 'Robles', 'Rodriguez', '91234573', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Andrea', 'Rodriguez', 'Guerra', '91234574', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Claudia', 'Rodriguez', 'Guerra', '91234575', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Josue', 'Casas', 'Gutierrez', '91234576', 'A');

INSERT INTO recuperacion.teen (name, surnamefather, surnamemother, dni, estado)
VALUES ('Naomi', 'Gutierrez', 'Gutierrez', '91234577', 'A');

-- Consultar datos de la tabla
SELECT * FROM recuperacion.teen;

CREATE TABLE recuperacion.funcionary (
    id_funcionary NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    surnamefather VARCHAR2(80) NOT NULL,
    surnamemother VARCHAR2(80) NOT NULL,
    dni VARCHAR2(8),
    phonenumber VARCHAR2(15),
    range VARCHAR2(80),
    confirmation VARCHAR2(255),
    department VARCHAR2(255),
    address VARCHAR2(255),
    email VARCHAR2(100) UNIQUE NOT NULL,
    status VARCHAR2(1) DEFAULT 'A' NOT NULL
);


-- Insertar datos de ejemplo
INSERT INTO recuperacion.funcionary (name, surnamefather, surnamemother, dni, phonenumber, range, confirmation, department, address, email, status)
VALUES ('Azul', 'Morales', 'Paredes', '12345678', '912345678', 'psicologo', 'Confirmado', 'Departamento Ejemplo', '123 Calle Ejemplo', 'azul@email.com', 'A');

INSERT INTO recuperacion.funcionary (name, surnamefather, surnamemother, dni, phonenumber, range, confirmation, department, address, email, status)
VALUES ('Edgar', 'Vargaz', 'Romero', '12345678', '912345678', 'psicologo', 'Confirmado', 'Departamento Ejemplo', '123 Calle Ejemplo', 'edgar@email.com', 'A');
-- Consultar datos de la tabla
SELECT * FROM recuperacion.funcionary;

-- Crear la tabla
CREATE TABLE recuperacion.address (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    address VARCHAR2(200),
    idadolescent VARCHAR2(200),
    active VARCHAR2(1) DEFAULT 'A' NOT NULL,
    ubigeo CHAR(6)
);


-- Insertar los datos en la tabla
INSERT INTO recuperacion.address ( address, idadolescent, active, ubigeo) VALUES ( 'Urb. Sindicato Choferes', '6', 'I', '755995');
INSERT INTO recuperacion.address ( address, idadolescent, active, ubigeo) VALUES ( 'Malvinas', '1', 'A', '741852');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ('Av. 28 de Julio', '6', 'I', '155953');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Av. Mariscal Benavides', '2', 'I', '986314');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Primavera', '11', 'I', '685324');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Jose Maria Escriba de Balaguer', '1', 'I', '985612');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Santa Rosa', '2', 'A', '122345');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Av. Lamar', '11', 'I', '759535');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Asuncion 8', '1', 'I', '123456');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. el Carmelo', '1', 'I', '963852');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Residencial Villa Cañete', '9', 'A', '122345');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Hualcara', '10', 'A', '748652');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ('Urb. el Pino', '1', 'I', '842657');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ('Urb. las Viñas', '12', 'A', '122345');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Valle Hermoso', '6', 'A', '627489');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Tercer Mundo', '1', 'A', '122345');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Huaca de los chinos', '1', 'I', '789456');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. Libertad', '11', 'I', '122345');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Sector San Viator', '3', 'A', '515965');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Sector San Jose', '4', 'A', '739146');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Sector la Florida', '5', 'A', '197364');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ('Compradore', '7', 'A', '159753');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'San Ambrosio', '8', 'A', '953751');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Huapalla', '9', 'A', '741963');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Calle Tupac Camaru', '10', 'A', '741963');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( '02 de Mayo', '11', 'A', '456128');
INSERT INTO recuperacion.address (address, idadolescent, active, ubigeo) VALUES ( 'Urb. las Casuarinas', '11', 'I', '122345');

-- Crear la tabla
CREATE TABLE recuperacion.activities (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    description VARCHAR2(250) NOT NULL,
    activity_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Cambié "date" a "activity_date" porque DATE es una palabra reservada en Oracle
    duration VARCHAR2(50),
    location VARCHAR2(255),
    active VARCHAR2(1) DEFAULT 'A' NOT NULL,
    type_pronacej VARCHAR2(50),
    type_soa VARCHAR2(50)
);

INSERT INTO recuperacion.activities (name, description, activity_date, duration, location, active, type_pronacej, type_soa)
VALUES ('Actividad 3', 'Descripción del evento 1', TO_DATE('2023-10-18', 'YYYY-MM-DD'), '2 horas', 'Ubicación 1', 'A', 'Pronacej 1', 'SOA 1');

INSERT INTO recuperacion.activities (name, description, activity_date, duration, location, active, type_pronacej, type_soa)
VALUES ('Actividad 4', 'Descripción del evento 1', TO_DATE('2023-10-18', 'YYYY-MM-DD'), '2 horas', 'Ubicación 1', 'A', 'Pronacej 1', 'SOA 1');

INSERT INTO recuperacion.activities (name, description, activity_date, duration, location, active, type_pronacej, type_soa)
VALUES ('Actividad 1', 'Descripción del evento 1', TO_DATE('2023-10-18', 'YYYY-MM-DD'), '2 horas', 'Ubicación 1', 'A', 'Pronacej 1', 'SOA 1');

INSERT INTO recuperacion.activities (name, description, activity_date, duration, location, active, type_pronacej, type_soa)
VALUES ('Actividad 2', 'Descripción del evento 2', TO_DATE('2023-10-19', 'YYYY-MM-DD'), '3 horas', 'Ubicación 2', 'A', 'Pronacej 2', 'SOA 2');

select * from RECUPERACION.ACTIVITIES;


-- Crear la tabla
CREATE TABLE recuperacion.programs (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- No se usa DEFAULT aquí
    name VARCHAR2(100) not null,
    program_type VARCHAR2(255), -- Cambié 'type' a 'program_type' para evitar conflicto
    beneficiary VARCHAR2(255),
    responsible VARCHAR2(255),
    description VARCHAR2(100),
    duration NUMBER,
    program_condition CHAR(1), -- Cambié 'condition' a 'program_condition'
    program_level VARCHAR2(255) -- Cambié 'level' a 'program_level'
);

-- Insertar datos usando la secuencia
INSERT INTO recuperacion.programs (name, program_type, beneficiary, responsible, description, duration, program_condition, program_level)
VALUES ( 'FIRMES Y ADELANTE', 'Tipo B', 'Beneficiario B', 'docente 2', 'Descripción del programa B', 1, 'A', 'Nivel B');

INSERT INTO recuperacion.programs ( name, program_type, beneficiary, responsible, description, duration, program_condition, program_level)
VALUES ( 'INTERVENCIÓN TERAPÉUTICA', 'Tipo A', 'Beneficiario A', 'docente 1', 'Descripción del programa A', 1, 'A', 'Nivel A');

INSERT INTO recuperacion.programs ( name, program_type, beneficiary, responsible, description, duration, program_condition, program_level)
VALUES ( 'TRABAJANDO POR MI COMUNIDAD', 'Tipo C', 'Beneficiario C', 'docente 3', 'Descripción del programa C', 1, 'A', 'Nivel C');

-- Consultar datos
SELECT * FROM recuperacion.programs;


CREATE TABLE recuperacion.funcionarios_adolescente (
    id_funcionaryteend NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY, -- Usamos NUMBER para los enteros
    description VARCHAR2(255),
    estado CHAR(1) DEFAULT 'A' NOT NULL,
    id_adolescente NUMBER,
    id_funcionary NUMBER,
    start_date DATE,
    register_date DATE,
    CONSTRAINT fk_adolescente FOREIGN KEY (id_adolescente) REFERENCES recuperacion.teen(id_adolescente),
    CONSTRAINT fk_funcionary FOREIGN KEY (id_funcionary) REFERENCES recuperacion.funcionary(id_funcionary)
);






